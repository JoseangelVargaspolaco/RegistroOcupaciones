@page "/personas"
@page "/personas/{PersonaId:int}"

@inject PersonasBLL personasBLL
@inject NotificationService notificationService

<EditForm Model="personas" OnValidSubmit="Guardar">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header text-center">
            <h3>Registro Personas</h3>
        </div>
        <div class="card-body">

            @*PersonaId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>PersonaId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="personas.PersonaId" class="form-control col-4" />
                            <div class="input-group-append">
                                <div class="input-group-append">
                                    <button type="button" class="bi bi-search btn btn-primary input-group-text"
                                        @onclick="Buscar"> Buscar</button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombre*@
                <div class="form-group">
                    <label>Nombre</label>
                    <InputText @bind-Value="personas.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => personas.Nombre)" />
                </div>

                @*Telefono*@
                <div class="form-group">
                    <label>Telefono</label>
                    <InputNumber @bind-Value="personas.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => personas.Telefono)" />
                </div>

                @*Celular*@
                <div class="form-group">
                    <label>Celular</label>
                    <InputNumber @bind-Value="personas.Celular" class="form-control" />
                    <ValidationMessage For="@(() => personas.Celular)" />
                </div>

                @*Email*@
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="personas.Email" class="form-control" />
                    <ValidationMessage For="@(() => personas.Email)" />
                </div><p></p>

                @*Direccion*@
                <div class="form-group">
                    <label>Direccion</label>
                    <InputText @bind-Value="personas.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => personas.Direccion)" />
                </div><p></p>

                @*FechaNacimiento*@
                <div class="input-group">
                    <span class="input-group-text">Fecha</span>
                    <input type="date" @bind-value="personas.FechaNacimiento" />
                </div><p></p>

                <ValidationMessage For="@(() => personas.FechaNacimiento)" />


                @*OcupacionID*@
                <div class="form-r ow align-items-center">

                    <label>Ocupacion</label>
                    <InputSelect class="form-select text-14" @bind-Value="personas.OcupacionId">
                        <option value="null"> </option>
                        @foreach (var item in lista)
                        {

                            <option value="@item.OcupacionId">@item.Descripcion</option>

                        }
                    </InputSelect>
                    <ValidationMessage For="@(() =>personas.OcupacionId)" />
                </div>
            </div>
            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="submit" class="bi bi-file-earmark-fill btn btn-lg btn-primary"> Nuevo</button>
                    <button type="submit" class="bi bi-file-earmark-text-fill btn btn-lg btn-success"> Guardar</button>
                    <button type="submit" class="bi bi-pencil-square btn btn-lg btn-success"> Editar</button>
                    <button type="submit" class="bi bi-trash btn btn-lg btn-danger"> Eliminar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int PersonaId { get; set; }
    public int OcupacionId { get; set; }
    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();
    public Persona personas { get; set; } = new Persona();

    public List<Ocupaciones> lista = new List<Ocupaciones>();

    public string mensaje = "";

    protected override void OnInitialized()
    {
        if (PersonaId > 0)
        {
            this.personas.PersonaId = PersonaId;
            this.Buscar();
        }
        lista = personasBLL.GetOcupaciones(c => true);
    }

    public void Nuevo()
    {
        mensaje = "";
        personas = new Persona();

        ShowNotification(
        new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Nueva plantilla creada correctamente"
        });
    }

    public void Guardar()
    {

        bool guardo = personasBLL.Guardar(personas);

        if (guardo)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
        }
    }
    private void Buscar()
    {
        if (personas.PersonaId > 0 || ocupacion.OcupacionId > 0)
        {
            var encontrado = personasBLL.Buscar(personas.PersonaId);

            if (encontrado != null)
                this.personas = encontrado;

                ShowNotification(
                new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Se encontraron los datos correctamente"
                });
            
        }
    }

    public void Eliminar()
    {
        bool elimino = personasBLL.Eliminar(personas);

        if (elimino)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Eliminado correctamente"
            });
        }
    }

    public void Editar()
    {

        var editar = personasBLL.Editar(personas);

        if(editar)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Editado correctamente"
            });
        }

    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);
    }
}