@page "/ocupacion"
@page "/ocupacion/{OcupacionId:int}"

@inject OcupacionesBLL ocupacionesBLL
@inject NotificationService notifierSvc

<EditForm Model="ocupacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="d-block p-2 bg-info text-white border border-4">
        <div class="card-header text-center">
            <h3>Registro de Ocupaciones</h3>
        </div>
        <div class="border border-4 card bg-primary text-white card-body">
            <div class="container overflow-hidden">
                <form class="row gy-3">

                    @*OcupacionId*@
                    <div class="form-r ow align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <label>OcupacionId</label>
                                <div class="input-group">
                                    <InputNumber @bind-Value="ocupacion.OcupacionId" class="form-control col-4" />
                                    <div class="input-group-append">
                                        <button type="button" class="input-group-text btn btn-primary" @onclick="Buscar"> <i class="oi oi-magnifying-glass" /></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Descripcion*@
                    <div class="col-md-6">
                        <label>Descripcion</label>
                        <InputText @bind-Value="ocupacion.Descripcion" class="form-control" />
                        <ValidationMessage For="@(() => ocupacion.Descripcion)" />
                    </div>

                    @*Salario*@
                    <div class="col-md-6">
                        <label>Salario</label>
                        <InputNumber @bind-Value="ocupacion.Salario" class="form-control" />
                        <ValidationMessage For="@(() => ocupacion.Salario)" />
                    </div>
                </form>
            </div>
        </div>

       <div class="card-footer d-flex justify-content-center">
            <div class="border border-3 btn-group" role="group">
                <button type="button" class="btn btn-primary" @onclick="Nuevo"> <i class="oi oi-file" /> Nuevo</button>
                <button type="submit" class="btn btn-success"> <i class="oi oi-document" /> Guardar</button>
                <button type="button" class="btn btn-success" @onclick="Editar"> <i class="oi oi-pencil" /> Editar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int OcupacionId { get; set; }
    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();

    protected override void OnInitialized()
    {
        if (OcupacionId > 0)
        {
            this.ocupacion.OcupacionId = OcupacionId;
            this.Buscar();
        }
    }

    private void Buscar()
    {
        if (ocupacion.OcupacionId > 0)
        {
            var encontrado = ocupacionesBLL.Buscar(ocupacion.OcupacionId);
            if (encontrado != null){
                this.ocupacion = encontrado;
                notifierSvc.ShowNotification("Registro encontrado", NotificationSeverity.Success);
            }
            else{
                notifierSvc.ShowNotification("Registro no encontrado", NotificationSeverity.Warning);
            }
        }
    }

    public void Nuevo()
    {
        ocupacion = new Ocupaciones();
        notifierSvc.ShowNotification("Nueva plantilla creada correctamente.", NotificationSeverity.Success);
    }

    public void Guardar()
    {

        var guardo = ocupacionesBLL.Guardar(this.ocupacion);
        if (guardo)
        {
            Nuevo();
            notifierSvc.ShowNotification("Fue guardado correctamente.");
        }
        else
        {
            notifierSvc.ShowNotification("No fue guardado, intentar nuevamente.", NotificationSeverity.Error);
        }
    }

    public void Editar()
    {
        var editar = ocupacionesBLL.Editar(ocupacion);

        if (editar)
        {
            Nuevo();
            notifierSvc.ShowNotification("Fue editado correctamente.");
        }
        else
        {
            notifierSvc.ShowNotification("No fue editado, intentar nuevamente.", NotificationSeverity.Error);
        }
    }

    public void Eliminar()
    {
        var elimino = ocupacionesBLL.Eliminar(ocupacion);
        if (elimino)
        {
            Nuevo();
            notifierSvc.ShowNotification("Fue eliminado correctamente.");
        }
        else
        {
            notifierSvc.ShowNotification("No fue eliminado, intentar nuevamente.", NotificationSeverity.Error);
        }
    }
}