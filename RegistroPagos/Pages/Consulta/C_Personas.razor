@page "/personas"
@inject PersonasBLL personasBLL


<EditForm Model="personas">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <DataAnnotationsValidator />
    <div class="d-block p-2 bg-info text-white border border-4">
        <div class="card-header text-center">
            <h3>Consulta Personas</h3>
        </div>
        
        <form class="input-group align-items-end card-body">
            <div class="container overflow-hidden">
                <div class="row gy-3">
                    <div class="form-group text-center">
                        <button type="button" class="bi bi-person-workspace btn btn-lg btn-primary" @onclick="Generar"> Generar Tabla Ocupaciones</button>
                    </div>

                    <div class="col-md-6">
                        <label>Filtro</label>
                        <select class="form-control" @bind="Filtro">
                            <option value="0"></option>
                            <option value="1">PersonaId</option>
                            <option value="2">Nombre</option>
                            <option value="3">OcupacionId</option>
                        </select>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Buscar</label>
                            <div class="input-group">
                                <input type="text" class="form-control" @bind="Criterio" />
                                <div class="input-group-append">
                                    <button type="button" class="input-group-text btn btn-primary" @onclick="Buscar"> <i class="oi oi-magnifying-glass" /></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <table class="table table text-white">
            <thead class="thead">
                <tr class="table-white border border-4">
                    <th>PersonaId</th>
                    <th>Nombre</th>
                    <th>Telefono</th>
                    <th>Celular</th>
                    <th>Email</th>
                    <th>Direccion</th>
                    <th>FechaNacimiento</th>
                    <th>OcupacionId</th>
                    <th>Balance</th>
                    <th>Ver</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var personas in personas)
                {
                    <tr>
                        <td>@personas.PersonaId</td>
                        <td>@personas.Nombres</td>
                        <td>@personas.Telefono</td>
                        <td>@personas.Celular</td>
                        <td>@personas.Email</td>
                        <td>@personas.Direccion</td>
                        <td>@personas.FechaNacimiento</td>
                        <td>@personas.OcupacionId</td>
                        <td>@personas.Balance</td>
                        <td><a href="personas/@personas.PersonaId">Ver</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</EditForm>

@code {
    public List<Personas> personas { get; set; } = new List<Personas>();
    public string Filtro { get; set; }
    public string Criterio { get; set; }
    public async Task Buscar()
    {
        personas = await personasBLL.GetPersonas(o => true);
        if(Criterio != null)
        {
            switch (Filtro)
            {
                case "0":
                    personas = await personasBLL.GetPersonas(o => true);
                    break;
                case "1":
                    personas = await personasBLL.GetPersonas(o => o.PersonaId.ToString() == (Criterio));
                    break;
                case "2":
                    personas = await personasBLL.GetPersonas(o => o.Nombres.ToLower().Contains(Criterio.ToLower()));
                    break;
                case "3":
                    personas = await personasBLL.GetPersonas(o => o.OcupacionId.ToString() == (Criterio));
                    break;
            }
        }
        else
        {
            personas = await personasBLL.GetPersonas(o => true);
        }
    }
    public async Task Generar(){
        personas = await personasBLL.GetPersonas(o => true);
    }
}
