@page "/personas"
@page "/personas/{PersonaId:int}"

@inject PersonasBLL personasBLL
@inject OcupacionesBLL ocupacionesBLL
@inject NotificationService notifierSvc

<EditForm Model="personas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="d-block p-2 bg-info text-white border border-4">
        <div class="card-header text-center">
            <h3>Registro de Personas</h3>
        </div>
        <div class="border border-4 card bg-primary text-white card-body">
            <div class="container overflow-hidden">
                <form class="row gy-3">

                    @*PersonaId*@
                    <div class="form-row align-items-center">
                        <div class="col"> 
                            <label class="form-label">PersonaId</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="personas.PersonaId" class="form-control col-4" />
                                <div class="input-group-append">
                                    <button type="button" class="input-group-text btn btn-primary" @onclick="Buscar"> <i class="oi oi-magnifying-glass" /></button>
                                </div>
                            </div>
                        </div>
                    </div>

                    @*Nombres*@
                    <div class="col-md-4">
                        <label class="form-label">Nombres</label>
                        <InputText @bind-Value="personas.Nombres" class="form-control" />
                        <ValidationMessage For="@(() => personas.Nombres)" />
                    </div>

                    @*Direccion*@
                    <div class="col-md-4">
                        <label class="form-label">Direccion</label>
                        <InputText @bind-Value="personas.Direccion" class="form-control" />
                        <ValidationMessage For="@(() => personas.Direccion)" />
                    </div>

                    @*Email*@
                    <div class="col-md-4">
                        <label class="form-label">Email</label>
                        <InputText @bind-Value="personas.Email" class="form-control" />
                        <ValidationMessage For="@(() => personas.Email)" />
                    </div>

                    @*FechaNacimiento*@
                    <div class="col-md-3">
                        <label class="form-label">Fecha De Nacimiento</label>
                        <InputDate @bind-Value="personas.FechaNacimiento" class="form-control" />
                        <ValidationMessage For="@(() => personas.FechaNacimiento)" />
                    </div>

                    @*Celular*@
                    <div class="col-md-2">
                        <label class="form-label">Celular</label>
                        <InputText @bind-Value="personas.Celular" class="form-control" />
                        <ValidationMessage For="@(() => personas.Celular)" />
                    </div>

                    @*Telefono*@
                    <div class="col-md-3">
                        <label class="form-label">Telefono</label>
                        <InputText @bind-Value="personas.Telefono" class="form-control" />
                        <ValidationMessage For="@(() => personas.Telefono)" />
                    </div>

                    @*OcupacionId*@
                    <div class="col-md-4">
                        <label class="form-label">OcupacionId</label>
                        <InputSelect class="form-select" @bind-Value="personas.OcupacionId">
                            <option value="0" disabled> Seleccione una ocupacion </option>
                            @foreach (Ocupaciones ocupacion in listaOcupaciones)
                            {
                                <option value="@ocupacion.OcupacionId">@ocupacion.Descripcion</option>
                            }
                        </InputSelect>
                    </div>
                </form>
            </div>
        </div>

        <div class="card-footer d-flex justify-content-center">
            <div class="border border-3 btn-group" role="group">
                <button type="button" class="btn btn-primary" @onclick="Nuevo"> <i class="oi oi-file" /> Nuevo</button>
                <button type="button" class="btn btn-success" @onclick="Guardar"> <i class="oi oi-document" /> Guardar</button>
                <button type="button" class="btn btn-primary" @onclick="Editar"> <i class="oi oi-pencil" /> Editar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int PersonaId { get; set; }
    public Personas personas { get; set; } = new Personas();
    public List<Ocupaciones> listaOcupaciones { get; set; }= new List<Ocupaciones>();
    protected override void OnInitialized()
    {
        listaOcupaciones = ocupacionesBLL.GetOcupaciones(o => true);
        if (PersonaId > 0)
        {
            this.personas.PersonaId = PersonaId;
            this.Buscar();
        }
    }

    private void Buscar()
    {
        if (personas.PersonaId > 0)
        {
            var encontrado = personasBLL.Buscar(personas.PersonaId);
            if (encontrado != null){
                this.personas = encontrado;
                notifierSvc.ShowNotification("Registro encontrado", NotificationSeverity.Success);
            }
            else{
                notifierSvc.ShowNotification("Registro no encontrado", NotificationSeverity.Warning);
            }  
        }
    }

    public void Nuevo()
    {
        personas = new Personas();
        notifierSvc.ShowNotification("Nueva plantilla creada correctamente.", NotificationSeverity.Success);
    }

    public void Guardar()
    {
        var guardo = personasBLL.Guardar(personas);

        if (guardo)
        {
            Nuevo();
            notifierSvc.ShowNotification("Fue guardado correctamente.");
        }
        else
        {
            notifierSvc.ShowNotification("No fue guardado, intentar nuevamente.", NotificationSeverity.Error);
        }
    }

    public void Editar()
    {
        var editar = personasBLL.Editar(personas);

        if (editar)
        {
            Nuevo();
            notifierSvc.ShowNotification("Fue editado correctamente", NotificationSeverity.Success);

        }else{

            notifierSvc.ShowNotification("No fue editado correctamente", NotificationSeverity.Error);

        }
    }
    
    public void Eliminar()
    {
        var elimino = personasBLL.Eliminar(personas);
        if (elimino)
        {
            Nuevo();
            notifierSvc.ShowNotification("Fue eliminado correctamente.", NotificationSeverity.Success);
        }
        else
        {
            notifierSvc.ShowNotification("No fue Eliminado, intentar nuevamente.", NotificationSeverity.Error);
        }
    }
}